{"$message_type":"diagnostic","message":"expected `;`, found keyword `let`","code":null,"level":"error","spans":[{"file_name":"src/types.rs","byte_start":4372,"byte_end":4375,"line_start":130,"line_end":130,"column_start":9,"column_end":12,"is_primary":false,"text":[{"text":"        let content = format!(","highlight_start":9,"highlight_end":12}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/types.rs","byte_start":4363,"byte_end":4363,"line_start":129,"line_end":129,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"        }","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src/types.rs","byte_start":4363,"byte_end":4363,"line_start":129,"line_end":129,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"        }","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `;`, found keyword `let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:129:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let content = format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected token\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"3 positional arguments in format string, but there are 2 arguments","code":null,"level":"error","spans":[{"file_name":"src/types.rs","byte_start":2660,"byte_end":2676,"line_start":85,"line_end":85,"column_start":40,"column_end":56,"is_primary":false,"text":[{"text":"        write!(encoder, \"{} {}\\x00{}\", self.object_type, self.object_size).context(\"Failed to write object header\")?;","highlight_start":40,"highlight_end":56}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/types.rs","byte_start":2678,"byte_end":2694,"line_start":85,"line_end":85,"column_start":58,"column_end":74,"is_primary":false,"text":[{"text":"        write!(encoder, \"{} {}\\x00{}\", self.object_type, self.object_size).context(\"Failed to write object header\")?;","highlight_start":58,"highlight_end":74}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/types.rs","byte_start":2646,"byte_end":2648,"line_start":85,"line_end":85,"column_start":26,"column_end":28,"is_primary":true,"text":[{"text":"        write!(encoder, \"{} {}\\x00{}\", self.object_type, self.object_size).context(\"Failed to write object header\")?;","highlight_start":26,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/types.rs","byte_start":2649,"byte_end":2651,"line_start":85,"line_end":85,"column_start":29,"column_end":31,"is_primary":true,"text":[{"text":"        write!(encoder, \"{} {}\\x00{}\", self.object_type, self.object_size).context(\"Failed to write object header\")?;","highlight_start":29,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/types.rs","byte_start":2655,"byte_end":2657,"line_start":85,"line_end":85,"column_start":35,"column_end":37,"is_primary":true,"text":[{"text":"        write!(encoder, \"{} {}\\x00{}\", self.object_type, self.object_size).context(\"Failed to write object header\")?;","highlight_start":35,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: 3 positional arguments in format string, but there are 2 arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:85:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        write!(encoder, \"{} {}\\x00{}\", self.object_type, self.object_size).context(\"Failed to write object header\")?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `Bufread` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/samuel/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/io/mod.rs","byte_start":75275,"byte_end":75298,"line_start":2185,"line_end":2185,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub trait BufRead: Read {","highlight_start":1,"highlight_end":24}],"label":"similarly named trait `BufRead` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/types.rs","byte_start":2917,"byte_end":2924,"line_start":90,"line_end":90,"column_start":60,"column_end":67,"is_primary":true,"text":[{"text":"    fn find_hash(object_hash: &str) -> anyhow::Result<impl Bufread> {","highlight_start":60,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a trait with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/types.rs","byte_start":2917,"byte_end":2924,"line_start":90,"line_end":90,"column_start":60,"column_end":67,"is_primary":true,"text":[{"text":"    fn find_hash(object_hash: &str) -> anyhow::Result<impl Bufread> {","highlight_start":60,"highlight_end":67}],"label":null,"suggested_replacement":"BufRead","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Bufread` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/types.rs:90:60\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn find_hash(object_hash: &str) -> anyhow::Result<impl Bufread> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a trait with a similar name exists: `BufRead`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/samuel/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/std/src/io/mod.rs:2185:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait BufRead: Read {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named trait `BufRead` defined here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `LSTreeError as LTE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/cmd/ls_tree.rs","byte_start":42,"byte_end":60,"line_start":2,"line_end":2,"column_start":30,"column_end":48,"is_primary":true,"text":[{"text":"    errors::{GitError as GE, LSTreeError as LTE},","highlight_start":30,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/cmd/ls_tree.rs","byte_start":25,"byte_end":26,"line_start":2,"line_end":2,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    errors::{GitError as GE, LSTreeError as LTE},","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/cmd/ls_tree.rs","byte_start":40,"byte_end":60,"line_start":2,"line_end":2,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    errors::{GitError as GE, LSTreeError as LTE},","highlight_start":28,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/cmd/ls_tree.rs","byte_start":60,"byte_end":61,"line_start":2,"line_end":2,"column_start":48,"column_end":49,"is_primary":true,"text":[{"text":"    errors::{GitError as GE, LSTreeError as LTE},","highlight_start":48,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `LSTreeError as LTE`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/cmd/ls_tree.rs:2:30\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    errors::{GitError as GE, LSTreeError as LTE},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 3 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0405`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0405`.\u001b[0m\n"}
